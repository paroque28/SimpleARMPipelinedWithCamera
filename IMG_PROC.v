
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module IMG_PROC(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// SDRAM //////////
	output		    [12:0]		DRAM_ADDR,
	output		     [1:0]		DRAM_BA,
	output		          		DRAM_CAS_N,
	output		          		DRAM_CKE,
	output		          		DRAM_CLK,
	output		          		DRAM_CS_N,
	inout 		    [15:0]		DRAM_DQ,
	output		          		DRAM_LDQM,
	output		          		DRAM_RAS_N,
	output		          		DRAM_UDQM,
	output		          		DRAM_WE_N,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// GPIO_0, GPIO_0 connect to D5M - 5M Pixel Camera //////////
	input 		    [11:0]		cameraD5M_D,
	input 		          		cameraD5M_FVAL,
	input 		          		cameraD5M_LVAL,
	input 		          		cameraD5M_PIXCLK,
	output		          		cameraD5M_RESET_N,
	output		          		cameraD5M_SCLK,
	inout 		          		cameraD5M_SDATA,
	input 		          		cameraD5M_STROBE,
	output		          		cameraD5M_TRIGGER,
	output		          		cameraD5M_XCLKIN,

	//////////// GPIO_1, GPIO_1 connect to MTL2 - Multi-Touch LCD Panel //////////
	output		     [7:0]		screenMTL_B,
	output		          		screenMTL_DCLK,
	output		     [7:0]		screenMTL_G,
	output		          		screenMTL_HSD,
	output		     [7:0]		screenMTL_R,
	output		          		screenMTL_VSD
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
	wire vga_clock, reset;
	assign reset = 1'b1;
	video u0 (
		.ref_clk_clk        (CLOCK_50),
		.lcd_clk_clk        (vga_clock) 
	);
	wire [7:0] fr, fg, fb;
	wire fh, fv;
	VGA_CTL vga_ctl (
		.vga_clk					(vga_clock),
		.reset_n					(reset),
		.red 						(fr),
		.green 					(fg),
		.blue						(fb),
		.vga_red					(screenMTL_R),
	   .vga_green				(screenMTL_G),
	   .vga_blue				(screenMTL_B),
		.vga_hsync				(screenMTL_HSD),
	   .vga_vsync				(screenMTL_VSD),
	   .fb_hblank				(fh),
	   .fb_vblank				(fv)
	);
	framebuffer frame (
		.reset_n					(reset),
	   .vga_clk					(vga_clock),
	 
		.fb_hblank				(fh),
		.fb_vblank				(fv),
	 
		.red						(fr),
		.green					(fg),
		.blue						(fb)
	);
	


//=======================================================
//  Structural coding
//=======================================================
assign screenMTL_DCLK = vga_clock;


endmodule
